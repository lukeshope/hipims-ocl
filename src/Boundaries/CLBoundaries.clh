/*
 * ------------------------------------------
 *
 *  HIGH-PERFORMANCE INTEGRATED MODELLING SYSTEM (HiPIMS)
 *  Luke S. Smith and Qiuhua Liang
 *  luke@smith.ac
 *
 *  School of Civil Engineering & Geosciences
 *  Newcastle University
 * 
 * ------------------------------------------
 *  This code is licensed under GPLv3. See LICENCE
 *  for more information.
 * ------------------------------------------
 *  Header file
 *  BOUNDARY CONDITIONS
 * ------------------------------------------
 *  Management functions for a domain
 *  boundaries.
 * ------------------------------------------
 *
 */

// Hydrological timestep
// This should be low to capture velocities properly, but isn't
// always necessary
// TODO: Make configurable...
#define TIMESTEP_HYDROLOGICAL			0.25

// Boundary types
#define BOUNDARY_ATMOSPHERIC			0
#define BOUNDARY_FLOWCONDITIONS			1

// Boundary operating definitions
#define BOUNDARY_DEPTH_IGNORE			0
#define BOUNDARY_DEPTH_IS_FSL			1
#define BOUNDARY_DEPTH_IS_DEPTH			2
#define BOUNDARY_DEPTH_IS_CRITICAL		3

#define BOUNDARY_DISCHARGE_IGNORE		0
#define BOUNDARY_DISCHARGE_IS_DISCHARGE	1
#define BOUNDARY_DISCHARGE_IS_VELOCITY	2
#define BOUNDARY_DISCHARGE_IS_VOLUME	3

#define BOUNDARY_UNIFORM_RAIN_INTENSITY	0
#define BOUNDARY_UNIFORM_LOSS_RATE		1

#define BOUNDARY_GRIDDED_RAIN_INTENSITY 0
#define BOUNDARY_GRIDDED_RAIN_ACCUMUL	1
#define BOUNDARY_GRIDDED_MASS_FLUX		2

#ifdef USE_FUNCTION_STUBS

typedef struct sBdyCellConfiguration
{
	cl_ulong		TimeseriesEntries;
	cl_double		TimeseriesInterval;
	cl_double		TimeseriesLength;
	cl_ulong		RelationCount;
	cl_uint			DefinitionDepth;
	cl_uint			DefinitionDischarge;
} sBdyCellConfiguration;

typedef struct sBdyGriddedConfiguration
{
	cl_double		TimeseriesInterval;
	cl_double		GridResolution;
	cl_double		GridOffsetX;
	cl_double		GridOffsetY;
	cl_ulong		TimeseriesEntries;
	cl_ulong		Definition;
	cl_ulong		GridRows;
	cl_ulong		GridCols;
} sBdyGriddedConfiguration;

typedef struct sBdyUniformConfiguration
{
	cl_uint			TimeseriesEntries;
	cl_double		TimeseriesInterval;
	cl_double		TimeseriesLength;
	cl_uint			Definition;
} sBdyUniformConfiguration;

typedef struct sBndySPipeConfiguration
{
		cl_uint			uiStartCellX;
		cl_uint			uiStartCellY;
		cl_uint			uiEndCellX;
		cl_uint			uiEndCellY;
		cl_double		length;
		cl_double		roughness;
		cl_double		lossCoefficients;
		cl_double		diameter;
		cl_double		invertStart;
		cl_double		invertEnd;
} sBndySPipeConfiguration;

__kernel void bdy_Cell ( 
	__constant		sBdyCellConfiguration *,
	__global		cl_ulong const * restrict,
	__global		cl_double4 const * restrict,
	__global		cl_double *,
	__global		cl_double *,
	__global		cl_double *,
	__global		cl_double4 *,
	__global		cl_double *,
	__global		cl_double *
);

__kernel void bdy_Gridded ( 
	__constant		sBdyGriddedConfiguration *,
	__global		cl_double const * restrict,
	__global		cl_double *,
	__global		cl_double *,
	__global		cl_double *,
	__global		cl_double4 *,
	__global		cl_double *,
	__global		cl_double *
);

__kernel void bdy_Uniform ( 
	__constant		sBdyUniformConfiguration *,
	__global		cl_double2 const * restrict,
	__global		cl_double *,
	__global		cl_double *,
	__global		cl_double *,
	__global		cl_double4 *,
	__global		cl_double *,
	__global		cl_double *
);

__kernel void bdy_SimplePipe ( 
	__constant		sBndySPipeConfiguration *,
	__global		cl_double *,
	__global		cl_double *,
	__global		cl_double *,
	__global		cl_double4 *,
	__global		cl_double *,
	__global		cl_double *
);

#endif